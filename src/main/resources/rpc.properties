################## rpc信息 ###############
######### 注册中心信息 #########
#是否使用注册中心
microservice.regcenter.use=false
#注册中心类型，类型包括：etcd、consule，默认：etcd
microservice.regcenter.type=etcd
#注册中心地址
microservice.regcenter.address[0]=http://192.168.137.232:2379
#microservice.regcenter.address[1] = http://192.168.0.2:2379
######### rpc服务端信息（如果不是开发RPC服务器，则不用填写 #########
#服务组名
microservice.server.groupName=pacers
#服务名
microservice.server.name=account
#节点名
microservice.server.node=node1
#服务id
microservice.server.id=100002
#服务ip
microservice.server.ip=192.168.31.198
#服务端口号
microservice.server.port=1235
#服务版本号
microservice.server.version=0.0.1
######### rpc客户端信息（如果不是开发RPC客户端，则不用填写） #########
######### 客户端连接池配置 #########
# 最大连接数
microservice.client.pool.maxTotal=10
# 最少空闲连接数
microservice.client.pool.minIdle=0
# 最多空闲连接数
microservice.client.pool.maxIdle=10
# 连接耗尽时是否阻塞,默认为true
microservice.client.pool.blockWhenExhausted=true
# 当连接池资源耗尽时,调用者最大阻塞的时间,超时时抛出异常，-1表示一直阻塞直到有空闲资源，默认值：5000；单位:毫秒
microservice.client.pool.maxWaitMillis=5000
# 连接空闲的最小时间,达到此值后空闲连接可能会被移除,默认即为30分钟，单位：毫秒
microservice.client.pool.minEvictableIdleTimeMillis=1800000
######### 如果开发多个RPC客户端，则支持填写多个 #########
# 服务组名
microservice.client.rpcserver[0].groupName=pacers
# 服务名称
microservice.client.rpcserver[0].serviceName=authn
# 服务地址，格式：ip:port；当不使用注册中心时需要配置
microservice.client.rpcserver[0].address[0]=192.168.31.198:10001
#microservice.client.serviceAddress[1]=192.168.0.108:100001
# 服务组名
microservice.client.rpcserver[1].groupName=pacers
# 服务名称
microservice.client.rpcserver[1].serviceName=account
# 服务地址，格式：ip:port；当不使用注册中心时需要配置
microservice.client.rpcserver[1].address[0]=60.205.190.105:10002
#microservice.client.rpcserver[1].address[1]=60.205.190.105:10002

